{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACtBC,YAAW,KACnBN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAiBC,MAAU,GAEvDA,EAAM,IAGRQ,MAAKC,IACJhB,EAAAiB,OAAOC,QAAQF,GACR,CAAEV,SAAUA,EAAUC,MAAOA,MAErCY,OAAMC,IACLpB,EAAAiB,OAAOI,QAAQD,GACR,CAAEd,SAAUA,EAAUC,MAAOA,K,CAc1CL,EAAKoB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,IAAIC,EAAaC,OAAOxB,EAAY,MAAEc,OACtC,MAAMW,EAAOD,OAAOxB,EAAW,KAAEc,OACjC,IAAK,IAAIY,EAAI,EAAGA,GAAK1B,EAAa,OAAEc,MAAOY,GAAK,EAC9CvB,EAAcuB,EAAGH,GAOjBA,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    let timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise\n    .then(value => {\n      Notify.success(value);\n      return { position: position, delay: delay };\n    })\n    .catch(error => {\n      Notify.failure(error);\n      return { position: position, delay: delay };\n    });\n\n  // return new Promise((resolve, reject) => {\n  //   let timerId = setTimeout(() => {\n  //     if (shouldResolve) {\n  //       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //     } else {\n  //       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n  //     }\n  //   }, delay);\n  // });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  // createButton.disabled = true;\n  let firstDelay = Number(form['delay'].value);\n  const step = Number(form['step'].value);\n  for (let i = 1; i <= form['amount'].value; i += 1) {\n    createPromise(i, firstDelay);\n    // .then(({ position, delay }) => {\n    //   Notify.success(value);\n    // })\n    // .catch(({ position, delay }) => {\n    //   Notify.failure(error);\n    // });\n    firstDelay += step;\n  }\n  // createButton.disabled = false;\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","value","Notify","success","catch","error","failure","addEventListener","event","preventDefault","firstDelay","Number","step","i"],"version":3,"file":"03-promises.8e1e041b.js.map"}