{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACtBC,YAAW,WACnBN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAuCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAErDA,E,IAGFS,MAAK,SAAAC,GAEJ,OADAjB,EAAAkB,OAAOC,QAAQF,GACR,CAAEX,SAAUA,EAAUC,MAAOA,E,IAErCa,OAAM,SAAAC,GAEL,OADArB,EAAAkB,OAAOI,QAAQD,GACR,CAAEf,SAAUA,EAAUC,MAAOA,E,IAc1CL,EAAKqB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAIN,IAFA,IAAIC,EAAaC,OAAOzB,EAAY,MAAEe,OAChCW,EAAOD,OAAOzB,EAAW,KAAEe,OACxBY,EAAI,EAAGA,GAAK3B,EAAa,OAAEe,MAAOY,GAAK,EAC9CxB,EAAcwB,EAAGH,GAOjBA,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    let timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise\n    .then(value => {\n      Notify.success(value);\n      return { position: position, delay: delay };\n    })\n    .catch(error => {\n      Notify.failure(error);\n      return { position: position, delay: delay };\n    });\n\n  // return new Promise((resolve, reject) => {\n  //   let timerId = setTimeout(() => {\n  //     if (shouldResolve) {\n  //       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //     } else {\n  //       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n  //     }\n  //   }, delay);\n  // });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  // createButton.disabled = true;\n  let firstDelay = Number(form['delay'].value);\n  const step = Number(form['step'].value);\n  for (let i = 1; i <= form['amount'].value; i += 1) {\n    createPromise(i, firstDelay);\n    // .then(({ position, delay }) => {\n    //   Notify.success(value);\n    // })\n    // .catch(({ position, delay }) => {\n    //   Notify.failure(error);\n    // });\n    firstDelay += step;\n  }\n  // createButton.disabled = false;\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","value","Notify","success","catch","error","failure","addEventListener","event","preventDefault","firstDelay","Number","step","i"],"version":3,"file":"03-promises.3f33af38.js.map"}